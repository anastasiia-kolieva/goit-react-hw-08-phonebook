{"version":3,"sources":["views/styles.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/shortid/lib/alphabet.js","components/ContactForm/ContactForm.module.css","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","services/contacts-api.js","components/ContactForm/ContactForm.js","redux/contacts/operations.js","redux/contacts/contacts-selectors.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/ContactsView.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","filter","item","ind","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","splice","shuffle","get","characters","seed","lookup","index","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","number","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","mask","log","LN2","step","id","RegExp","replace","test","BASE_URL","a","persistedToken","options","method","headers","Authorization","fetch","result","data","json","message","newContactToAdd","body","JSON","stringify","contactId","api","fetchContacts","addContacts","deleteContacts","ContactForm","onCheckUnique","useState","name","setName","setNumber","dispatch","useDispatch","handleChange","event","target","validateForm","alert","resetForm","className","s","form","onSubmit","newContact","preventDefault","shortid","getState","auth","token","actions","then","catch","error","autoComplete","label","type","placeholder","onChange","Button","variant","color","submit_button","getContacts","state","contacts","items","getFilter","getfilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","includes","Filter","useSelector","filter_title","div","filter_input","connect","onDeleteContact","operations","map","li","button","onClick","ContactsView","useEffect","Container","title","isExistContact","find"],"mappings":"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","file":"static/js/3.ac39f7bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__IkMu4\",\"title_secondary\":\"styles_title_secondary__2jzIB\",\"form\":\"styles_form__3o8Oy\",\"label\":\"styles_label__3Q9B7\",\"div\":\"styles_div__1Apsh\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1q58R\",\"label\":\"ContactForm_label__MU_a4\",\"submit_button\":\"ContactForm_submit_button__1g6rn\"};","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_title\":\"Filter_filter_title__2Uo1-\",\"div\":\"Filter_div__15xUy\",\"filter_input\":\"Filter_filter_input__1PZdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__uZ9ZA\",\"button\":\"ContactList_button__NkfpV\"};","const BASE_URL = 'https://goit-phonebook-api.herokuapp.com';\n\nasync function fetchContacts({ persistedToken }) {\n  const options = {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + persistedToken,\n    },\n  };\n\n  try {\n    const result = await fetch(`${BASE_URL}/contacts`, options);\n    const data = result.json();\n    return data;\n  } catch (error) {\n    throw error.message;\n  }\n}\n\nasync function addContacts(newContactToAdd, { persistedToken }) {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(newContactToAdd),\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n      Authorization: 'Bearer ' + persistedToken,\n    },\n  };\n\n  try {\n    const result = await fetch(`${BASE_URL}/contacts`, options);\n    const data = result.json();\n    return data;\n  } catch (error) {\n    throw error.message;\n  }\n}\n\nasync function deleteContacts(contactId, { persistedToken }) {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      Authorization: 'Bearer ' + persistedToken,\n    },\n  };\n\n  try {\n    const result = await fetch(`${BASE_URL}/contacts/${contactId}`, options);\n    const data = result.json();\n    return data;\n  } catch (error) {\n    throw error.message;\n  }\n}\n\nconst api = {\n  fetchContacts,\n  addContacts,\n  deleteContacts,\n};\n\nexport default api;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport s from '../ContactForm/ContactForm.module.css';\nimport shortid from 'shortid';\nimport * as operations from '../../redux/contacts/operations';\n\nexport default function ContactForm({ onCheckUnique }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handelSubmit = event => {\n    event.preventDefault();\n\n    const isValidateForm = validateForm();\n\n    if (!isValidateForm) {\n      return;\n    }\n\n    dispatch(\n      operations.contactFormSubmithandler({\n        id: shortid.generate(),\n        name,\n        number,\n      }),\n    );\n\n    resetForm();\n  };\n\n  const validateForm = () => {\n    if (!name || !number) {\n      alert('Some field is empty!');\n      return false;\n    }\n    return onCheckUnique(name);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handelSubmit} autoComplete=\"off\">\n      <label className={s.label}>\n        Name{' '}\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number{' '}\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        type=\"submit\"\n        className={s.submit_button}\n      >\n        Add contact\n      </Button>\n    </form>\n  );\n}\n","import api from '../../services/contacts-api';\nimport * as actions from './actions';\n\nconst fetchContacts = () => (dispatch, getState) => {\n  const state = getState();\n  const persistedToken = state.auth.token;\n  dispatch(actions.fetchContactsRequest());\n\n  api\n    .fetchContacts({ persistedToken })\n    .then(data => dispatch(actions.fetchContactsSuccess(data)))\n    .catch(error => dispatch(actions.fetchContactsError(error.message)));\n};\n\n// Action-creator- это функция, в которую передаются аргументы. А из себя она возвращает\n// функцию, которая получает dispatch(метод)\n// Прослойка thunk смотрит: если тип action=функция, то она эту функцию просто вызывает. Если нет, она\n// этот action отправляет дальше\n// тоесть отправляется результат функции\n// по результату http запроса, делается dispatch с результатами асинхронки(с данными) отправляешь action\nconst contactFormSubmithandler = newContact => (dispatch, getState) => {\n  const state = getState();\n  const persistedToken = state.auth.token;\n  dispatch(actions.contactFormSubmithandlerRequest());\n\n  api\n    .addContacts(newContact, { persistedToken })\n    .then(data => dispatch(actions.contactFormSubmithandlerSuccess(data)))\n    .catch(error =>\n      dispatch(actions.contactFormSubmithandlerError(error.message)),\n    );\n};\n\nconst handelDeleteContact = contactId => (dispatch, getState) => {\n  const state = getState();\n  const persistedToken = state.auth.token;\n  dispatch(actions.handelDeleteContactRequest());\n\n  api\n    .deleteContacts(contactId, { persistedToken })\n    .then(() => dispatch(actions.handelDeleteContactSuccess(contactId)))\n    .catch(error => dispatch(actions.handelDeleteContactError(error.message)));\n};\n\nexport { fetchContacts, contactFormSubmithandler, handelDeleteContact };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getfilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    const filteredContacts = items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return filteredContacts;\n  },\n);\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from '../Filter/Filter.module.css';\nimport * as actions from '../../redux/contacts/actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <h2 className={s.filter_title}>Find contacts by name</h2>\n      <div className={s.div}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter contact name\"\n          className={s.filter_input}\n          value={value}\n          onChange={event => dispatch(actions.changeFilter(event.target.value))}\n        ></input>\n      </div>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport s from '../ContactList/ContactList.module.css';\nimport * as operations from '../../redux/contacts/operations';\nimport { getfilteredContacts } from '../../redux/contacts/contacts-selectors';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id} className={s.li}>\n          {contact.name}: {contact.number}\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className={s.button}\n            onClick={() => onDeleteContact(contact.id)}\n          >\n            Delete\n          </Button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string,\n    }),\n  ),\n};\n\nconst mapStateToProps = state => {\n  return {\n    contacts: getfilteredContacts(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDeleteContact: contactId =>\n      dispatch(operations.handelDeleteContact(contactId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Container from '../components/Container/Container';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\nimport { getContacts } from '../redux/contacts/contacts-selectors';\nimport * as operations from '../redux/contacts/operations';\nimport s from './styles.module.css';\n\nexport default function ContactsView() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n\n  const handelCheckUniqueContact = name => {\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert('Contact is already exist!');\n    return !isExistContact;\n  };\n\n  return (\n    <Container>\n      <h1 className={s.title}>Phonebook</h1>\n\n      <ContactForm onCheckUnique={handelCheckUniqueContact} />\n\n      <h2 className={s.title}>Contacts</h2>\n\n      <Filter />\n\n      <ContactList />\n    </Container>\n  );\n}\n"],"sourceRoot":""}